"""
–û—Å–Ω–æ–≤–Ω–æ–π –±–æ—Ç –¥–ª—è –¥—É—ç–ª–µ–π MORI
"""
import asyncio
from aiogram import Bot, Dispatcher
from aiogram.fsm.storage.memory import MemoryStorage

from config.settings import MAIN_BOT_TOKEN
from database.connection import init_db
from utils.logger import setup_logger

# –ò–º–ø–æ—Ä—Ç handlers
from bots.handlers.start import router as start_router
from bots.handlers.wallet import router as wallet_router
from bots.handlers.balance import router as balance_router
from bots.handlers.game import router as game_router  # ‚Üê –î–û–ë–ê–í–õ–ï–ù–û
from bots.handlers.rooms import router as rooms_router
from bots.handlers.admin import router as admin_router
from bots.handlers.stats import router as stats_router  # ‚Üê –î–û–ë–ê–í–õ–ï–ù–û

logger = setup_logger(__name__)

# –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä
bot = Bot(token=MAIN_BOT_TOKEN)
storage = MemoryStorage()
dp = Dispatcher(storage=storage)


async def setup_bot():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–æ—Ç–∞"""
    logger.info("üîß Setting up main bot...")

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    await init_db()

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ä–æ—É—Ç–µ—Ä—ã
    dp.include_router(start_router)
    dp.include_router(wallet_router)
    dp.include_router(balance_router)
    dp.include_router(game_router)  # ‚Üê –î–û–ë–ê–í–õ–ï–ù–û
    dp.include_router(rooms_router)
    dp.include_router(stats_router)  # ‚Üê –î–û–ë–ê–í–õ–ï–ù–û
    dp.include_router(admin_router)

    logger.info("‚úÖ Main bot setup complete")


async def main_bot_polling():
    """–ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –±–æ—Ç–∞"""
    try:
        await setup_bot()

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞
        from aiogram.types import BotCommand
        await bot.set_my_commands([
            BotCommand(command="start", description="üöÄ –ù–∞—á–∞—Ç—å –∏–≥—Ä—É"),
            BotCommand(command="balance", description="üí∞ –ú–æ–π –±–∞–ª–∞–Ω—Å"),
            BotCommand(command="stats", description="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"),
            BotCommand(command="help", description="‚ùì –ü–æ–º–æ—â—å"),
        ])

        logger.info("üöÄ Starting main bot polling...")
        await dp.start_polling(bot)

    except Exception as e:
        logger.error(f"‚ùå Error in main bot: {e}")
        raise
    finally:
        await bot.session.close()


if __name__ == "__main__":
    asyncio.run(main_bot_polling())