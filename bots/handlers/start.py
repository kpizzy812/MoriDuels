from aiogram import Router, F
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.filters import CommandStart
from aiogram.fsm.context import FSMContext

from bots.keyboards.main_menu import get_main_menu
from database.models.user import User
from bots.handlers.wallet import WalletStates
from utils.logger import setup_logger

router = Router()
logger = setup_logger(__name__)


@router.message(CommandStart())
async def cmd_start(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    user_id = message.from_user.id
    username = message.from_user.username

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∞—Ä–≥—É–º–µ–Ω—Ç—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Å—Å—ã–ª–∫–∞ –Ω–∞ –∫–æ–º–Ω–∞—Ç—É)
    args = message.text.split()[1:] if len(message.text.split()) > 1 else []

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –ë–î
    user = await User.get_by_telegram_id(user_id)

    if not user:
        # –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –Ω—É–∂–Ω–æ –ø—Ä–∏–≤—è–∑–∞—Ç—å –∫–æ—à–µ–ª–µ–∫
        welcome_text = """–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ MORI Duels! ü™ô

–î–ª—è –∏–≥—Ä—ã –Ω—É–∂–Ω–æ –ø—Ä–∏–≤—è–∑–∞—Ç—å Solana –∫–æ—à–µ–ª–µ–∫
–ù–∞ –Ω–µ–≥–æ –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –≤—ã–∏–≥—Ä—ã—à–∏

üëõ –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∞–¥—Ä–µ—Å —Å–≤–æ–µ–≥–æ –∫–æ—à–µ–ª—å–∫–∞:"""

        # –ï—Å–ª–∏ –µ—Å—Ç—å –∞—Ä–≥—É–º–µ–Ω—Ç (–Ω–∞–ø—Ä–∏–º–µ—Ä room_ABC123), —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ
        if args and args[0].startswith('room_'):
            await state.update_data(pending_room=args[0])
            room_code = args[0].replace('room_', '')
            welcome_text += f"""

üè† –ü–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç–µ—Å—å –∫ –∫–æ–º–Ω–∞—Ç–µ: {room_code}"""

        await message.answer(welcome_text)
        await state.set_state(WalletStates.waiting_for_address)
        return

    # –°—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    balance = await user.get_balance()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Ö–æ—á–µ—Ç –ª–∏ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –∫–æ–º–Ω–∞—Ç–µ
    if args and args[0].startswith('room_'):
        room_code = args[0].replace('room_', '')
        await handle_room_join_existing_user(message, user, room_code)
        return

    # –û–±—ã—á–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await message.answer(
        f"""–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ MORI Duels! ü™ô

üí∞ –ë–∞–ª–∞–Ω—Å: {balance:,.2f} MORI
üëõ –ö–æ—à–µ–ª–µ–∫: {user.wallet_address[:8]}...{user.wallet_address[-4:]}

–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:""",
        reply_markup=get_main_menu()
    )


async def handle_room_join_existing_user(message: Message, user: User, room_code: str):
    """–û–±—Ä–∞–±–æ—Ç–∞—Ç—å –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ –∫–æ–º–Ω–∞—Ç–µ"""
    try:
        from database.models.room import Room, RoomStatus
        from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–Ω–∞—Ç–µ
        room = await Room.get_by_code(room_code)

        if not room:
            await message.answer(
                f"""‚ùå –ö–æ–º–Ω–∞—Ç–∞ {room_code} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!

–í–æ–∑–º–æ–∂–Ω–æ, —Å—Å—ã–ª–∫–∞ —É—Å—Ç–∞—Ä–µ–ª–∞ –∏–ª–∏ –∫–æ–º–Ω–∞—Ç–∞ –±—ã–ª–∞ –∑–∞–∫—Ä—ã—Ç–∞.""",
                reply_markup=get_main_menu()
            )
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–æ–º–Ω–∞—Ç—ã
        if room.status != RoomStatus.WAITING:
            status_messages = {
                RoomStatus.FULL: "—É–∂–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞",
                RoomStatus.EXPIRED: "–∏—Å—Ç–µ–∫–ª–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è",
                RoomStatus.CLOSED: "–±—ã–ª–∞ –∑–∞–∫—Ä—ã—Ç–∞ —Å–æ–∑–¥–∞—Ç–µ–ª–µ–º"
            }
            status_text = status_messages.get(room.status, "–Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")

            await message.answer(
                f"""‚ùå –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –∫–æ–º–Ω–∞—Ç–∞ {room_code} {status_text}!

–ù–æ –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ –¥—Ä—É–≥–∏–µ –∏–≥—Ä—ã:""",
                reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                    [InlineKeyboardButton(text="üè† –í—Å–µ –∫–æ–º–Ω–∞—Ç—ã", callback_data="rooms")],
                    [InlineKeyboardButton(text="üéÆ –ë—ã—Å—Ç—Ä–∞—è –∏–≥—Ä–∞", callback_data="quick_game")],
                    [InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
                ])
            )
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∏—Å—Ç–µ–∫–ª–∞ –ª–∏ –∫–æ–º–Ω–∞—Ç–∞
        if room.is_expired():
            await room.expire_room()
            await message.answer(
                f"""‚ùå –í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –≤ –∫–æ–º–Ω–∞—Ç–µ {room_code} –∏—Å—Ç–µ–∫–ª–æ!

–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞–π—Ç–∏ –¥—Ä—É–≥–∏–µ –∏–≥—Ä—ã:""",
                reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                    [InlineKeyboardButton(text="üè† –í—Å–µ –∫–æ–º–Ω–∞—Ç—ã", callback_data="rooms")],
                    [InlineKeyboardButton(text="üéÆ –ë—ã—Å—Ç—Ä–∞—è –∏–≥—Ä–∞", callback_data="quick_game")],
                    [InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
                ])
            )
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Å–æ–∑–¥–∞—Ç–µ–ª—å –ª–∏ —ç—Ç–æ –∫–æ–º–Ω–∞—Ç—ã
        if room.creator_id == user.telegram_id:
            await message.answer(
                f"""‚ÑπÔ∏è –≠—Ç–æ –≤–∞—à–∞ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–∞—è –∫–æ–º–Ω–∞—Ç–∞ {room_code}!

üí∞ –°—Ç–∞–≤–∫–∞: {room.stake:,.0f} MORI
‚è∞ –ñ–¥–µ–º –¥—Ä—É–≥–∏—Ö –∏–≥—Ä–æ–∫–æ–≤ –¥–ª—è –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è...

–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å—Å—ã–ª–∫–æ–π —Å –¥—Ä—É–∑—å—è–º–∏ –∏–ª–∏ –∂–¥–∏—Ç–µ —Å–ª—É—á–∞–π–Ω—ã—Ö –∏–≥—Ä–æ–∫–æ–≤!""",
                reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                    [InlineKeyboardButton(text="‚ùå –ó–∞–∫—Ä—ã—Ç—å –∫–æ–º–Ω–∞—Ç—É", callback_data=f"close_room_{room_code}")],
                    [InlineKeyboardButton(text="üè† –í—Å–µ –∫–æ–º–Ω–∞—Ç—ã", callback_data="rooms")]
                ])
            )
            return

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–Ω–∞—Ç–µ –¥–ª—è –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
        creator = await User.get_by_telegram_id(room.creator_id)
        creator_name = creator.username if creator and creator.username else f"Player {room.creator_id}"
        time_left = room.get_time_left()
        minutes_left = max(0, int(time_left.total_seconds() // 60))

        await message.answer(
            f"""üè† –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ –∫–æ–º–Ω–∞—Ç—É {room_code}

üë§ –°–æ–∑–¥–∞—Ç–µ–ª—å: @{creator_name}
üí∞ –°—Ç–∞–≤–∫–∞: {room.stake:,.0f} MORI
‚è∞ –û—Å—Ç–∞–ª–æ—Å—å –≤—Ä–µ–º–µ–Ω–∏: {minutes_left} –º–∏–Ω

–•–æ—Ç–∏—Ç–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –∏–≥—Ä–µ?""",
            reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="üéÆ –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è", callback_data=f"join_room_{room_code}")],
                [InlineKeyboardButton(text="üè† –í—Å–µ –∫–æ–º–Ω–∞—Ç—ã", callback_data="rooms")],
                [InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
            ])
        )

        logger.info(f"‚úÖ Showed room {room_code} info to existing user {user.id}")

    except Exception as e:
        logger.error(f"‚ùå Error handling room join for existing user: {e}")
        await message.answer(
            f"""‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–Ω–∞—Ç—ã {room_code}

–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞–π—Ç–∏ –¥—Ä—É–≥–∏–µ –∏–≥—Ä—ã:""",
            reply_markup=get_main_menu()
        )


@router.callback_query(F.data == "main_menu")
async def back_to_main_menu(callback: CallbackQuery):
    """–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    user_id = callback.from_user.id
    user = await User.get_by_telegram_id(user_id)

    if not user:
        await callback.message.edit_text(
            """‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω!

–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏""",
            reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="üîÑ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è", callback_data="start")]
            ])
        )
        await callback.answer()
        return

    balance = await user.get_balance()
    await callback.message.edit_text(
        f"""–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ MORI Duels! ü™ô

üí∞ –ë–∞–ª–∞–Ω—Å: {balance:,.2f} MORI
üëõ –ö–æ—à–µ–ª–µ–∫: {user.wallet_address[:8]}...{user.wallet_address[-4:]}

–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:""",
        reply_markup=get_main_menu()
    )
    await callback.answer()