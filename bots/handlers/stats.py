"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏ –ø—Ä–∞–≤–∏–ª
"""
from aiogram import Router, F
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.filters import Command

from database.models.user import User
from database.models.transaction import Transaction
from bots.keyboards.main_menu import get_main_menu
from utils.logger import setup_logger

router = Router()
logger = setup_logger(__name__)


@router.callback_query(F.data == "stats")
@router.message(Command("stats"))
async def show_user_stats(update):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø update (Message –∏–ª–∏ CallbackQuery)
    if hasattr(update, 'from_user'):
        user_id = update.from_user.id
        edit_func = update.answer
    else:
        user_id = update.from_user.id
        edit_func = update.message.edit_text

    user = await User.get_by_telegram_id(user_id)

    if not user:
        await edit_func(
            """‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω!

–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏""",
            reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="main_menu")]
            ])
        )
        if hasattr(update, 'answer'):
            await update.answer()
        return

    # –ü–æ–ª—É—á–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    recent_transactions = await Transaction.get_user_transactions(user.id, limit=5)

    # –°—á–∏—Ç–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è–º
    total_deposits = sum(tx.amount for tx in recent_transactions if tx.type.value == "deposit")
    total_withdrawals = sum(tx.amount for tx in recent_transactions if tx.type.value == "withdrawal")

    stats_text = f"""üìà –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞

üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.username or f'User {user.telegram_id}'}
üìÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è: {user.created_at.strftime('%d.%m.%Y')}

üí∞ –§–∏–Ω–∞–Ω—Å—ã:
‚Ä¢ –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {user.balance:,.2f} MORI
‚Ä¢ –í—Å–µ–≥–æ –≤–Ω–µ—Å–µ–Ω–æ: {total_deposits:,.2f} MORI
‚Ä¢ –í—Å–µ–≥–æ –≤—ã–≤–µ–¥–µ–Ω–æ: {total_withdrawals:,.2f} MORI

üéÆ –ò–≥—Ä—ã:
‚Ä¢ –ò–≥—Ä —Å—ã–≥—Ä–∞–Ω–æ: {user.total_games}
‚Ä¢ –ü–æ–±–µ–¥: {user.wins}
‚Ä¢ –ü–æ—Ä–∞–∂–µ–Ω–∏–π: {user.total_games - user.wins}
‚Ä¢ –ü—Ä–æ—Ü–µ–Ω—Ç –ø–æ–±–µ–¥: {user.get_win_rate():.1f}%

üíé –†–µ–∑—É–ª—å—Ç–∞—Ç:
‚Ä¢ –í—Å–µ–≥–æ –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–æ: {user.total_wagered:,.2f} MORI
‚Ä¢ –í—Å–µ–≥–æ –≤—ã–∏–≥—Ä–∞–Ω–æ: {user.total_won:,.2f} MORI
‚Ä¢ –û–±—â–∞—è –ø—Ä–∏–±—ã–ª—å: {user.get_profit():+,.2f} MORI"""

    if user.total_games > 0:
        avg_stake = user.total_wagered / user.total_games
        stats_text += f"\n‚Ä¢ –°—Ä–µ–¥–Ω—è—è —Å—Ç–∞–≤–∫–∞: {avg_stake:,.2f} MORI"

        if user.wins > 0:
            avg_win = user.total_won / user.wins
            stats_text += f"\n‚Ä¢ –°—Ä–µ–¥–Ω–∏–π –≤—ã–∏–≥—Ä—ã—à: {avg_win:,.2f} MORI"

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–∞–Ω–≥ –∏–≥—Ä–æ–∫–∞
    if user.get_win_rate() >= 70:
        rank = "üèÜ –ú–∞—Å—Ç–µ—Ä"
    elif user.get_win_rate() >= 60:
        rank = "üíé –≠–∫—Å–ø–µ—Ä—Ç"
    elif user.get_win_rate() >= 50:
        rank = "‚≠ê –ü—Ä–æ—Ñ–∏"
    elif user.total_games >= 10:
        rank = "üéÆ –ò–≥—Ä–æ–∫"
    else:
        rank = "üå± –ù–æ–≤–∏—á–æ–∫"

    stats_text += f"\n\nüèÖ –í–∞—à —Ä–∞–Ω–≥: {rank}"

    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="üìã –ò—Å—Ç–æ—Ä–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π", callback_data="transaction_history"),
            InlineKeyboardButton(text="üèÜ –†–µ–π—Ç–∏–Ω–≥", callback_data="leaderboard")
        ],
        [
            InlineKeyboardButton(text="üéÆ –ò–≥—Ä–∞—Ç—å", callback_data="quick_game"),
            InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")
        ]
    ])

    await edit_func(stats_text, reply_markup=keyboard)

    if hasattr(update, 'answer'):
        await update.answer()


@router.callback_query(F.data == "leaderboard")
async def show_leaderboard(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É –ª–∏–¥–µ—Ä–æ–≤"""
    try:
        # –í —Ä–µ–∞–ª—å–Ω–æ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –∑–¥–µ—Å—å –±—ã–ª –±—ã –∑–∞–ø—Ä–æ—Å –∫ –ë–î
        # –ü–æ–∫–∞ –¥–µ–ª–∞–µ–º –∑–∞–≥–ª—É—à–∫—É
        leaderboard_text = """üèÜ –¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤

üëë –¢–û–ü –ø–æ –ø—Ä–∏–±—ã–ª–∏:
1. ü•á @crypto_king - +25,000 MORI
2. ü•à @moon_trader - +18,500 MORI  
3. ü•â @diamond_hands - +12,300 MORI
4. üèÖ @hodl_master - +9,800 MORI
5. üèÖ @lucky_player - +7,200 MORI

‚≠ê –¢–û–ü –ø–æ –ø—Ä–æ—Ü–µ–Ω—Ç—É –ø–æ–±–µ–¥:
1. ü•á @pro_gamer - 78.5% (89 –∏–≥—Ä)
2. ü•à @coin_master - 76.2% (67 –∏–≥—Ä)
3. ü•â @win_streak - 72.8% (103 –∏–≥—Ä)

üéÆ –¢–û–ü –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –∏–≥—Ä:
1. ü•á @game_addict - 234 –∏–≥—Ä—ã
2. ü•à @play_master - 198 –∏–≥—Ä
3. ü•â @duel_king - 167 –∏–≥—Ä

üí° –ò–≥—Ä–∞–π—Ç–µ –±–æ–ª—å—à–µ, —á—Ç–æ–±—ã –ø–æ–ø–∞—Å—Ç—å –≤ —Ä–µ–π—Ç–∏–Ω–≥!"""

        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(text="üìä –ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="stats")
            ],
            [
                InlineKeyboardButton(text="üéÆ –ò–≥—Ä–∞—Ç—å", callback_data="quick_game"),
                InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="stats")
            ]
        ])

        await callback.message.edit_text(leaderboard_text, reply_markup=keyboard)
        await callback.answer()

    except Exception as e:
        logger.error(f"‚ùå Error showing leaderboard: {e}")
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–µ–π—Ç–∏–Ω–≥–∞", show_alert=True)


@router.callback_query(F.data == "rules")
@router.message(Command("rules"))
async def show_rules(update):
    """–ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã"""
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø update
    if hasattr(update, 'from_user'):
        edit_func = update.answer
    else:
        edit_func = update.message.edit_text

    rules_text = """‚ÑπÔ∏è –ü—Ä–∞–≤–∏–ª–∞ MORI Duels

üéÆ –ö–∞–∫ –∏–≥—Ä–∞—Ç—å:
1. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å MORI —Ç–æ–∫–µ–Ω–∞–º–∏
2. –í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–º–µ—Ä —Å—Ç–∞–≤–∫–∏
3. –ù–∞–π–¥–∏—Ç–µ –æ–ø–ø–æ–Ω–µ–Ω—Ç–∞ –∏–ª–∏ –∏–≥—Ä–∞–π—Ç–µ —Å –±–æ—Ç–æ–º
4. –ë—Ä–æ—Å—å—Ç–µ –º–æ–Ω–µ—Ç—É - –æ—Ä–µ–ª –∏–ª–∏ —Ä–µ—à–∫–∞
5. –ó–∞–±–∏—Ä–∞–π—Ç–µ –≤—ã–∏–≥—Ä—ã—à!

üí∞ –í—ã–ø–ª–∞—Ç—ã:
‚Ä¢ –í—ã–∏–≥—Ä—ã—à —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 70% –æ—Ç —Å—Ç–∞–≤–∫–∏ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞
‚Ä¢ 30% –æ—Å—Ç–∞–µ—Ç—Å—è –∫–∞–∫ –∫–æ–º–∏—Å—Å–∏—è –ø—Ä–æ–µ–∫—Ç–∞
‚Ä¢ –í—ã–∏–≥—Ä—ã—à–∏ –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è –Ω–∞ –≤–∞—à –∫–æ—à–µ–ª–µ–∫

üéØ –¢–∏–ø—ã –∏–≥—Ä:
‚Ä¢ üéÆ –ë—ã—Å—Ç—Ä–∞—è –∏–≥—Ä–∞ - –∞–≤—Ç–æ–ø–æ–¥–±–æ—Ä –æ–ø–ø–æ–Ω–µ–Ω—Ç–∞
‚Ä¢ üè† –ö–æ–º–Ω–∞—Ç—ã - —Å–æ–∑–¥–∞–≤–∞–π—Ç–µ –ø—Ä–∏–≤–∞—Ç–Ω—ã–µ –∏–≥—Ä—ã
‚Ä¢ ü§ñ –° –±–æ—Ç–∞–º–∏ - –µ—Å–ª–∏ –Ω–µ—Ç —Ä–µ–∞–ª—å–Ω—ã—Ö –∏–≥—Ä–æ–∫–æ–≤

üí∏ –í—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤:
‚Ä¢ –ö–æ–º–∏—Å—Å–∏—è –∑–∞ –≤—ã–≤–æ–¥: 5%
‚Ä¢ –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞: 10 MORI
‚Ä¢ –°—Ä–µ–¥—Å—Ç–≤–∞ –ø–æ—Å—Ç—É–ø–∞—é—Ç –Ω–∞ –≤–∞—à –∫–æ—à–µ–ª–µ–∫

‚ö†Ô∏è –í–∞–∂–Ω–æ:
‚Ä¢ –ò–≥—Ä–∞ –æ—Å–Ω–æ–≤–∞–Ω–∞ –Ω–∞ —É–¥–∞—á–µ (50/50)
‚Ä¢ –ò–≥—Ä–∞–π—Ç–µ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ
‚Ä¢ –ù–µ —Å—Ç–∞–≤—å—Ç–µ –±–æ–ª—å—à–µ, —á–µ–º –º–æ–∂–µ—Ç–µ –ø–æ—Ç–µ—Ä—è—Ç—å

üé≤ –ß–µ—Å—Ç–Ω–æ—Å—Ç—å:
‚Ä¢ –†–µ–∑—É–ª—å—Ç–∞—Ç –±—Ä–æ—Å–∫–∞ –º–æ–Ω–µ—Ç—ã —Å–ª—É—á–∞–µ–Ω
‚Ä¢ –°–∏—Å—Ç–µ–º–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –ø—Ä–æ–∑—Ä–∞—á–Ω–∞
‚Ä¢ –í—Å–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –≤ –±–ª–æ–∫—á–µ–π–Ω–µ Solana"""

    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="üéÆ –ù–∞—á–∞—Ç—å –∏–≥—Ä—É", callback_data="quick_game"),
            InlineKeyboardButton(text="üí∞ –ü–æ–ø–æ–ª–Ω–∏—Ç—å", callback_data="deposit")
        ],
        [
            InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")
        ]
    ])

    await edit_func(rules_text, reply_markup=keyboard)

    if hasattr(update, 'answer'):
        await update.answer()


@router.message(Command("help"))
async def help_command(message: Message):
    """–ö–æ–º–∞–Ω–¥–∞ –ø–æ–º–æ—â–∏"""
    help_text = """‚ùì –ü–æ–º–æ—â—å MORI Duels

üöÄ –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º
/balance - –ü–æ–∫–∞–∑–∞—Ç—å –±–∞–ª–∞–Ω—Å
/stats - –ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞  
/rules - –ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã
/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞

üéÆ –ò–≥—Ä–∞:
‚Ä¢ –ù–∞–∂–º–∏—Ç–µ "üéÆ –ë—ã—Å—Ç—Ä–∞—è –∏–≥—Ä–∞" –¥–ª—è –ø–æ–∏—Å–∫–∞ –æ–ø–ø–æ–Ω–µ–Ω—Ç–∞
‚Ä¢ –ò–ª–∏ —Å–æ–∑–¥–∞–π—Ç–µ –∫–æ–º–Ω–∞—Ç—É –≤ —Ä–∞–∑–¥–µ–ª–µ "üè† –ö–æ–º–Ω–∞—Ç—ã"
‚Ä¢ –í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∞–≤–∫—É –∏ –±—Ä–æ—Å—å—Ç–µ –º–æ–Ω–µ—Ç—É!

üí∞ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–æ–º:
‚Ä¢ "üí∞ –ü–æ–ø–æ–ª–Ω–∏—Ç—å" - –≤–Ω–µ—Å—Ç–∏ MORI —Ç–æ–∫–µ–Ω—ã
‚Ä¢ "üí∏ –í—ã–≤–µ—Å—Ç–∏" - –≤—ã–≤–µ—Å—Ç–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞ –Ω–∞ –∫–æ—à–µ–ª–µ–∫
‚Ä¢ "üëõ –ö–æ—à–µ–ª–µ–∫" - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–¥—Ä–µ—Å–æ–º

üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:
‚Ä¢ –û—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ —Å–≤–æ—é –ø—Ä–∏–±—ã–ª—å
‚Ä¢ –°–º–æ—Ç—Ä–∏—Ç–µ –∏—Å—Ç–æ—Ä–∏—é –∏–≥—Ä
‚Ä¢ –°—Ä–∞–≤–Ω–∏–≤–∞–π—Ç–µ—Å—å —Å –¥—Ä—É–≥–∏–º–∏ –≤ —Ä–µ–π—Ç–∏–Ω–≥–µ

üÜò –ü–æ–¥–¥–µ—Ä–∂–∫–∞:
‚Ä¢ –ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ @support
‚Ä¢ –í—Å–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –ª–æ–≥–∏—Ä—É—é—Ç—Å—è –≤ –±–ª–æ–∫—á–µ–π–Ω–µ

üçÄ –£–¥–∞—á–Ω–æ–π –∏–≥—Ä—ã!"""

    await message.answer(help_text, reply_markup=get_main_menu())


@router.message(Command("balance"))
async def balance_command(message: Message):
    """–ë—ã—Å—Ç—Ä–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –±–∞–ª–∞–Ω—Å–∞"""
    user_id = message.from_user.id
    user = await User.get_by_telegram_id(user_id)

    if not user:
        await message.answer(
            "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏"
        )
        return

    balance_text = f"""üí∞ –ë—ã—Å—Ç—Ä—ã–π –±–∞–ª–∞–Ω—Å

üìä –î–æ—Å—Ç—É–ø–Ω–æ: {user.balance:,.2f} MORI
üéÆ –ò–≥—Ä —Å—ã–≥—Ä–∞–Ω–æ: {user.total_games}
üèÜ –ü–æ–±–µ–¥: {user.wins}
üíé –ü—Ä–∏–±—ã–ª—å: {user.get_profit():+,.2f} MORI

–î–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ."""

    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="üìä –ü–æ–¥—Ä–æ–±–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="stats"),
            InlineKeyboardButton(text="üí∞ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–æ–º", callback_data="balance")
        ],
        [
            InlineKeyboardButton(text="üéÆ –ò–≥—Ä–∞—Ç—å", callback_data="quick_game")
        ]
    ])

    await message.answer(balance_text, reply_markup=keyboard)