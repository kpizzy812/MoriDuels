#!/usr/bin/env python3
"""
–§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∞
"""
from pathlib import Path
import sys


def check_file_structure():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ñ–∞–π–ª–æ–≤"""
    print("üìÅ –ü–†–û–í–ï–†–ö–ê –°–¢–†–£–ö–¢–£–†–´ –§–ê–ô–õ–û–í:")

    required_files = {
        # –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã
        "main.py": "–ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª –∑–∞–ø—É—Å–∫–∞",
        "init_db.py": "–°–∫—Ä–∏–ø—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ë–î",
        "check_setup.py": "–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫",
        "requirements.txt": "–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ Python",
        ".env.example": "–ü—Ä–∏–º–µ—Ä –Ω–∞—Å—Ç—Ä–æ–µ–∫",
        "README.md": "–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è",

        # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
        "config/settings.py": "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞",
        "config/__init__.py": "Init —Ñ–∞–π–ª config",

        # –£—Ç–∏–ª–∏—Ç—ã
        "utils/logger.py": "–°–∏—Å—Ç–µ–º–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è",
        "utils/create_dirs.py": "–°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–æ–∫",
        "utils/__init__.py": "Init —Ñ–∞–π–ª utils",

        # –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
        "database/connection.py": "–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î",
        "database/__init__.py": "Init —Ñ–∞–π–ª database",
        "database/models/__init__.py": "Init —Ñ–∞–π–ª models",
        "database/models/user.py": "–ú–æ–¥–µ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
        "database/models/duel.py": "–ú–æ–¥–µ–ª—å –¥—É—ç–ª–∏",
        "database/models/transaction.py": "–ú–æ–¥–µ–ª—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏",
        "database/models/room.py": "–ú–æ–¥–µ–ª—å –∫–æ–º–Ω–∞—Ç—ã",
        "database/models/wallet_history.py": "–ò—Å—Ç–æ—Ä–∏—è –∫–æ—à–µ–ª—å–∫–æ–≤",

        # –û—Å–Ω–æ–≤–Ω–æ–π –±–æ—Ç
        "bots/main_bot.py": "–û—Å–Ω–æ–≤–Ω–æ–π –±–æ—Ç",
        "bots/user_bot.py": "User bot –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–æ–≤",
        "bots/__init__.py": "Init —Ñ–∞–π–ª bots",

        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        "bots/handlers/__init__.py": "Init —Ñ–∞–π–ª handlers",
        "bots/handlers/start.py": "–û–±—Ä–∞–±–æ—Ç—á–∏–∫ /start",
        "bots/handlers/game.py": "–ò–≥—Ä–æ–≤—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏",
        "bots/handlers/rooms.py": "–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–Ω–∞—Ç",
        "bots/handlers/wallet.py": "–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ—à–µ–ª—å–∫–∞",
        "bots/handlers/balance.py": "–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –±–∞–ª–∞–Ω—Å–∞",
        "bots/handlers/admin.py": "–ê–¥–º–∏–Ω –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏",
        "bots/handlers/stats.py": "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",

        # –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        "bots/keyboards/__init__.py": "Init —Ñ–∞–π–ª keyboards",
        "bots/keyboards/main_menu.py": "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",

        # Middlewares
        "bots/middlewares/__init__.py": "Init —Ñ–∞–π–ª middlewares",

        # –°–µ—Ä–≤–∏—Å—ã
        "services/__init__.py": "Init —Ñ–∞–π–ª services",
        "services/solana_service.py": "Solana —Å–µ—Ä–≤–∏—Å",
        "services/jupiter_service.py": "Jupiter API",
        "services/chart_service.py": "–ì—Ä–∞—Ñ–∏–∫–∏",
        "services/game_service.py": "–ò–≥—Ä–æ–≤–∞—è –ª–æ–≥–∏–∫–∞",
        "services/deposit_monitor.py": "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –¥–µ–ø–æ–∑–∏—Ç–æ–≤",

        # –ê–¥–º–∏–Ω–∫–∞
        "admin/__init__.py": "Init —Ñ–∞–π–ª admin",

        # –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
        "–ó–ê–ü–£–°–ö_–ü–†–û–ï–ö–¢–ê.md": "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∑–∞–ø—É—Å–∫—É",
        "SETUP_USERBOT.md": "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ user bot"
    }

    missing_files = []
    total_files = len(required_files)
    existing_files = 0

    for file_path, description in required_files.items():
        if Path(file_path).exists():
            print(f"‚úÖ {file_path}")
            existing_files += 1
        else:
            print(f"‚ùå {file_path} - {description}")
            missing_files.append(file_path)

    print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: {existing_files}/{total_files} —Ñ–∞–π–ª–æ–≤ ({existing_files / total_files * 100:.1f}%)")

    if missing_files:
        print(f"\n‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ñ–∞–π–ª—ã ({len(missing_files)}):")
        for file in missing_files:
            print(f"   ‚Ä¢ {file}")
        return False
    else:
        print("\n‚úÖ –í—Å–µ —Ñ–∞–π–ª—ã –Ω–∞ –º–µ—Å—Ç–µ!")
        return True


def check_code_quality():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –∫–æ–¥–∞"""
    print("\nüîç –ü–†–û–í–ï–†–ö–ê –ö–ê–ß–ï–°–¢–í–ê –ö–û–î–ê:")

    issues = []

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã –Ω–∞ –∑–∞–≥–ª—É—à–∫–∏
    files_to_check = [
        "services/solana_service.py",
        "services/game_service.py",
        "bots/handlers/admin.py",
        "services/deposit_monitor.py"
    ]

    for file_path in files_to_check:
        if Path(file_path).exists():
            with open(file_path, 'r', encoding='utf-8') as f:
                content = f.read()

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –∑–∞–≥–ª—É—à–∫–∏
            if "mock" in content.lower() or "–∑–∞–≥–ª—É—à–∫–∞" in content.lower() or "# –ü–æ–∫–∞" in content:
                issues.append(f"{file_path}: —Å–æ–¥–µ—Ä–∂–∏—Ç –∑–∞–≥–ª—É—à–∫–∏")
            else:
                print(f"‚úÖ {file_path}: –±–µ–∑ –∑–∞–≥–ª—É—à–µ–∫")
        else:
            issues.append(f"{file_path}: —Ñ–∞–π–ª –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")

    if issues:
        print(f"\n‚ö†Ô∏è –ù–∞–π–¥–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã ({len(issues)}):")
        for issue in issues:
            print(f"   ‚Ä¢ {issue}")
        return False
    else:
        print("\n‚úÖ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!")
        return True


def check_imports():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤"""
    print("\nüì¶ –ü–†–û–í–ï–†–ö–ê –ò–ú–ü–û–†–¢–û–í:")

    critical_files = [
        "bots/main_bot.py",
        "bots/user_bot.py",
        "main.py"
    ]

    for file_path in critical_files:
        if Path(file_path).exists():
            try:
                with open(file_path, 'r', encoding='utf-8') as f:
                    content = f.read()

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑–æ–≤—ã–µ –∏–º–ø–æ—Ä—Ç—ã
                if "import" in content and "from" in content:
                    print(f"‚úÖ {file_path}: –∏–º–ø–æ—Ä—Ç—ã –≤—ã–≥–ª—è–¥—è—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
                else:
                    print(f"‚ö†Ô∏è {file_path}: —Å—Ç—Ä–∞–Ω–Ω—ã–µ –∏–º–ø–æ—Ä—Ç—ã")

            except Exception as e:
                print(f"‚ùå {file_path}: –æ—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è - {e}")
        else:
            print(f"‚ùå {file_path}: —Ñ–∞–π–ª –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")

    return True


def generate_status_report():
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞ –æ —Å—Ç–∞—Ç—É—Å–µ"""
    print("\n" + "=" * 60)
    print("üìã –°–¢–ê–¢–£–° –ü–†–û–ï–ö–¢–ê MORI DUELS BOT")
    print("=" * 60)

    components = {
        "ü§ñ –û—Å–Ω–æ–≤–Ω–æ–π –±–æ—Ç": "‚úÖ –ì–æ—Ç–æ–≤ –∫ –∑–∞–ø—É—Å–∫—É",
        "üë§ User bot –≥—Ä–∞—Ñ–∏–∫–∏": "‚úÖ –ì–æ—Ç–æ–≤ —Å –∞–Ω—Ç–∏—Å–ø–∞–º –∑–∞—â–∏—Ç–æ–π",
        "üóÑÔ∏è –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö": "‚úÖ –ú–æ–¥–µ–ª–∏ –≥–æ—Ç–æ–≤—ã",
        "üéÆ –ò–≥—Ä–æ–≤–∞—è –ª–æ–≥–∏–∫–∞": "‚úÖ –î—É—ç–ª–∏ –∏ –∫–æ–º–Ω–∞—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç",
        "üí∞ –°–∏—Å—Ç–µ–º–∞ –±–∞–ª–∞–Ω—Å–æ–≤": "‚úÖ –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ/–≤—ã–≤–æ–¥ (mock)",
        "üõ†Ô∏è –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å": "‚ö†Ô∏è –ß–∞—Å—Ç–∏—á–Ω–æ –≥–æ—Ç–æ–≤–∞ (–∑–∞–≥–ª—É—à–∫–∏)",
        "üìä –ì—Ä–∞—Ñ–∏–∫–∏ —Ü–µ–Ω": "‚úÖ –ö—Ä–∞—Å–∏–≤—ã–µ —Å–≤–µ—á–Ω—ã–µ –≥—Ä–∞—Ñ–∏–∫–∏",
        "üîí –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å": "‚úÖ –ê–Ω—Ç–∏—Å–ø–∞–º –¥–ª—è user bot",
        "üìù –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è": "‚úÖ –ü–æ–ª–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏"
    }

    for component, status in components.items():
        print(f"{component}: {status}")

    print("\nüéØ –ü–†–ò–û–†–ò–¢–ï–¢–´ –î–û–†–ê–ë–û–¢–ö–ò:")
    print("1. üî¥ –†–µ–∞–ª—å–Ω—ã–µ Solana —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ (solana_service)")
    print("2. üü° –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –¥–µ–ø–æ–∑–∏—Ç–æ–≤ (deposit_monitor)")
    print("3. üü¢ –ê–¥–º–∏–Ω–∫–∞ —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏")

    print("\nüöÄ –ì–û–¢–û–í–ù–û–°–¢–¨ –ö –ó–ê–ü–£–°–ö–£: 85%")
    print("‚úÖ –ú–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è!")


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞"""
    print("üîç –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –ü–†–û–ï–ö–¢–ê")
    print("=" * 50)

    all_good = True

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É
    if not check_file_structure():
        all_good = False

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—á–µ—Å—Ç–≤–æ
    check_code_quality()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º–ø–æ—Ä—Ç—ã
    check_imports()

    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç
    generate_status_report()

    if all_good:
        print("\nüéâ –ü–†–û–ï–ö–¢ –ì–û–¢–û–í –ö –ó–ê–ü–£–°–ö–£!")
        print("üìñ –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –≤ –ó–ê–ü–£–°–ö_–ü–†–û–ï–ö–¢–ê.md")
    else:
        print("\n‚ö†Ô∏è –ù–£–ñ–ù–´ –î–û–†–ê–ë–û–¢–ö–ò!")
        print("üîß –ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ —Ñ–∞–π–ª—ã")


if __name__ == "__main__":
    main()